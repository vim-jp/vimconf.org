session_id = "atusy"
start_at = 2025-11-02T14:20:00+09:00
end_at = 2025-11-02T14:50:00+09:00
speaker_name = "atusy"
title = 'Beyond Syntax Highlighting: Unlocking the Power of Tree-sitter in Neovim'
abstract = '''
Neovim users get benefits of beautiful syntax highlighting with Tree-sitter.
However, Tree-sitter can do much more than just syntax highlighting.
Once you understand it is actually an incremental parsing library, you may come up with various ways to enhance your text edit experience.

I will introduce some of my favorite use cases and their implementations (tree-sitter parser, query, and Neovim plugin).
Audience can try out these examples themselves, or use them as a starting point for their own creative ideas.

Here are some of the use cases I will cover:

* Select and edit syntactically meaningful regions
    * select a specific kind of nodes as text objects (e.g. function, class, etc.)
    * select a node that includes the cursor position with a help of easymotion-like labelling
* Add extra highights to your code
    * change the background color of code blocks in markdown files
    * emphasize URL paths in literal string
* and more
    * syntax-aware code folding
    * context-aware key mappings based on the node under the cursor

Also, I would like to introduce `treesitter-ls`, a tree-sittere-powered language server.
Although this is currently a work in progress, it is worth introducing as it potentially provides the power of tree-sitter to non-Neovim users.
'''
