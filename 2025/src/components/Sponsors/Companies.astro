---
import { getCollection } from "astro:content";
import Company from "./Company.astro";
import Heading from "../Heading.astro";
import type { CollectionEntry } from "astro:content";

const sponsorsData = await getCollection("sponsors");

const sponsors = sponsorsData.map((sponsor) => sponsor.data);

const sponsorsByRank = sponsors.reduce(
  (acc, sponsor) => {
    if (!acc[sponsor.rank]) {
      acc[sponsor.rank] = [];
    }
    acc[sponsor.rank].push(sponsor);
    return acc;
  },
  {} as Record<string, typeof sponsors>,
);

const rankOrder = [
  "platinum",
  "gold",
  "silver",
  "bronze",
] as CollectionEntry<"sponsors">["data"]["rank"][];

const rankNameMap = {
  platinum: "プラチナ",
  gold: "ゴールド",
  silver: "シルバー",
  bronze: "ブロンズ",
};

const getGridClasses = (rank: string, count: number) => {
  const baseClasses = [
    "mb-8",
    "grid",
    "place-items-center",
    "gap-4",
  ];

  if (rank === "platinum") {
    return [...baseClasses, "grid-cols-1"];
  }

  if (count === 1) {
    return [...baseClasses, "grid-cols-1"];
  }

  const gridConfig: Record<string, Record<number, string>> = {
    gold: {
      2: "grid-cols-2 md:grid-cols-2",
    },
    silver: {
      2: "grid-cols-2 md:grid-cols-2",
      3: "grid-cols-2 md:grid-cols-3",
    },
    bronze: {
      2: "grid-cols-2 md:grid-cols-2",
      3: "grid-cols-2 md:grid-cols-3",
      4: "grid-cols-2 md:grid-cols-4",
    },
  };

  const config = gridConfig[rank];
  if (config) {
    const counts = Object.keys(config)
      .map(Number)
      .sort((a, b) => b - a);

    for (const minCount of counts) {
      if (count >= minCount) {
        return [...baseClasses, config[minCount]];
      }
    }
  }

  return baseClasses;
};
---

<Heading>企業スポンサー</Heading>
{
  rankOrder.map(
    (rank) =>
      sponsorsByRank[rank] && (
        <>
          <h4 class="mb-6 text-center text-2xl font-bold text-gray-800">
            {rankNameMap[rank]}
          </h4>
          <div
            class={getGridClasses(rank, sponsorsByRank[rank].length).join(" ")}
          >
            {sponsorsByRank[rank].sort().map((sponsor) => (
              <Company {sponsor} />
            ))}
          </div>
        </>
      ),
  )
}
