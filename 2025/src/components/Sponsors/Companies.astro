---
import { getCollection } from "astro:content";
import Company from "./Company.astro";
import Heading from "../Heading.astro";
import type { CollectionEntry } from "astro:content";

const sponsorsData = await getCollection("sponsors");

const sponsors = sponsorsData.map((sponsor) => sponsor.data);

const sponsorsByRank = sponsors.reduce(
  (acc, sponsor) => {
    if (!acc[sponsor.rank]) {
      acc[sponsor.rank] = [];
    }
    acc[sponsor.rank].push(sponsor);
    return acc;
  },
  {} as Record<string, typeof sponsors>,
);

const rankOrder = [
  "platinum",
  "gold",
  "silver",
  "bronze",
] as CollectionEntry<"sponsors">["data"]["rank"][];

const rankNameMap = {
  platinum: "プラチナ",
  gold: "ゴールド",
  silver: "シルバー",
  bronze: "ブロンズ",
};
---

<Heading>企業スポンサー</Heading>
{
  rankOrder.map(
    (rank) =>
      sponsorsByRank[rank] && (
        <>
          <h4 class="mb-6 text-center text-2xl font-bold text-gray-800">
            {rankNameMap[rank]}
          </h4>
          <div
            class:list={[
              "mb-8 grid place-items-center gap-4",
              { "grid-cols-1": rank === "platinum" },
              { "grid-cols-2 md:grid-cols-2": rank === "gold" },
              { "grid-cols-2 md:grid-cols-3": rank === "silver" },
              { "grid-cols-2 md:grid-cols-4": rank === "bronze" },
            ]}
          >
            {sponsorsByRank[rank].sort().map((sponsor) => (
              <Company {sponsor} />
            ))}
          </div>
        </>
      ),
  )
}
